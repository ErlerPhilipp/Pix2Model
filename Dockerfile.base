# Use the NVIDIA CUDA base image for CUDA 12.4 and Ubuntu 22.04
FROM nvidia/cuda:12.4.0-devel-ubuntu22.04

###########################################################################
# Install Python 3.9 and pipenv
###########################################################################

RUN apt-get update && apt-get install -y --no-install-recommends \
    python3.9 \
    python3-pip \
    libgl1-mesa-glx \
    software-properties-common \
    && rm -rf /var/lib/apt/lists/*

RUN pip install pipenv

RUN apt-get update && apt-get -y install \
    wget \
    software-properties-common \
    libgl1-mesa-glx

# Set up environment variables for CUDA and NVIDIA
ENV PATH /usr/local/cuda/bin:${PATH}
ENV LD_LIBRARY_PATH /usr/local/cuda/lib64:${LD_LIBRARY_PATH}
ENV NVIDIA_VISIBLE_DEVICES ${NVIDIA_VISIBLE_DEVICES:-all}
ENV NVIDIA_DRIVER_CAPABILITIES ${NVIDIA_DRIVER_CAPABILITIES:+$NVIDIA_DRIVER_CAPABILITIES,}compute,graphics,utility
###########################################################################
# Install COLMAP (see https://colmap.github.io/install.html#linux)
###########################################################################
WORKDIR /root

ENV DEBIAN_FRONTEND non-interactive
ENV DEBCONF_NOWARNINGS yes

# Install depencencies

ARG CMAKE_VERSION=3.28.0

RUN apt-get update -y -qq \
&&  apt-get install -y -qq --no-install-recommends \
    build-essential \
    ca-certificates \
    libssl-dev \
&&  wget https://github.com/Kitware/CMake/releases/download/v${CMAKE_VERSION}/cmake-${CMAKE_VERSION}.tar.gz \
&&  tar zxvf cmake-${CMAKE_VERSION}.tar.gz \
&&  cd cmake-${CMAKE_VERSION} \
&&  ./bootstrap \
&&  make && make install && cd .. \
&&  rm -rf /cmake-${CMAKE_VERSION} && rm cmake-${CMAKE_VERSION}.tar.gz

RUN apt-get install -y -qq --no-install-recommends \
    git \
    libatlas-base-dev \
    libboost-filesystem-dev \
    libboost-graph-dev \
    libboost-program-options-dev \
    libboost-filesystem-dev \
    libboost-regex-dev \
    libboost-system-dev \
    libboost-test-dev \
    libcgal-dev \
    libcgal-qt5-dev \
    libeigen3-dev \
    libflann-dev \
    libfreeimage-dev \
    libmetis-dev \
    libgflags-dev \
    libsqlite3-dev \
    libglew-dev \
    libgoogle-glog-dev \
    libgtest-dev \
    libqt5opengl5-dev \
    libsuitesparse-dev \
    qtbase5-dev \
    libcgal-dev \
    libceres-dev \
&&  apt-get autoremove -y -qq \
&&  apt-get clean && rm -rf /var/lib/apt/lists/*

ARG SOURCE_DIR=/sources
ARG CERES_SOURCE_DIR=${SOURCE_DIR}/ceres-solver
ARG COLMAP_SOURCE_DIR=${SOURCE_DIR}/colmap
ARG CMAKE_INSTALL_PREFIX=/usr/local

# Get sources

RUN mkdir "${SOURCE_DIR}"

RUN git clone https://ceres-solver.googlesource.com/ceres-solver "${CERES_SOURCE_DIR}" \
&&  git clone https://github.com/colmap/colmap.git "${COLMAP_SOURCE_DIR}"

# Build and install ceres-solver

ARG CERES_SOLVER_COMMIT=facb199f3e

RUN mkdir -p "${CERES_SOURCE_DIR}/build"
WORKDIR ${CERES_SOURCE_DIR}/build

RUN git checkout "${CERES_SOLVER_COMMIT}" \
&&  git rev-parse HEAD > /ceres-solver-version \
&&  cmake .. \
        -DCMAKE_BUILD_TYPE:STRING=Release \
        -DCMAKE_INSTALL_PREFIX:PATH="${CMAKE_INSTALL_PREFIX}" \
        -DBUILD_TESTING:BOOL=OFF \
        -DBUILD_EXAMPLES:BOOL=OFF \
&&  make -j4 \
&&  make install

# Build and install colmap
RUN mkdir -p "${COLMAP_SOURCE_DIR}/build"
WORKDIR ${COLMAP_SOURCE_DIR}/build

RUN cmake .. \
        -DCMAKE_BUILD_TYPE:STRING=Release \
        -DCMAKE_INSTALL_PREFIX:PATH="${CMAKE_INSTALL_PREFIX}" \
        -DBUILD_TESTING:BOOL=OFF \
        -DBUILD_EXAMPLES:BOOL=OFF \
&&  make -j4 \
&&  make install


###########################################################################
# Other dependencies
###########################################################################

RUN apt-get update && apt-get install -y --no-install-recommends \
    libopengl-dev
