version: "3.9"
services:
  client_deployed_dev:
    restart: always
    stdin_open: true
    build:
      context: ./web
      dockerfile: ./Dockerfile.nginx
    ports:
      - "80:80"
      - "8080:8080"
      - "8082:8082"
      - "443:443"
    depends_on:
      - backend
    volumes:
      - type: bind
        target: /usr/src/app/data
        source: ${UPLOAD_FOLDER}
      - type: bind
        target: /etc/ssl
        source: ${SSL_CERT_FOLDER}
      - type: bind
        target: /var/www/certbot/
        source: ./certbot/www
    profiles:
      - deploy
    networks:
      - default
  certbot:
    image: certbot/certbot:latest
    volumes:
      - ./certbot/www/:/var/www/certbot/:rw
      - type: bind
        target: /etc/letsencrypt/
        source: ${SSL_CERT_FOLDER}
    profiles:
      - cert
  backend:
    restart: always
    build: .
    depends_on:
      - redis
    expose:
      - "5000"
    volumes:
      - type: bind
        target: /usr/src/app/data
        source: ${UPLOAD_FOLDER}
      - type: bind
        target: /usr/src/app/backend_log/
        source: ${BACKEND_LOG}
    networks:
      - default
  redis:
    restart: always
    image: "redis:alpine"
  dashboard:
    restart: always
    build: ./dashboard
    depends_on:
      - redis
    environment:
      - RQ_DASHBOARD_REDIS_URL=redis://redis:6379
      - RQ_DASHBOARD_USERNAME=${RQ_DASHBOARD_USERNAME}
      - RQ_DASHBOARD_PASSWORD=${RQ_DASHBOARD_PASSWORD}
      - RQ_DASHBOARD_URL_PREFIX=/dashboard
    expose:
      - "9181"
    networks:
      - default
  worker:
    restart: always
    build: .
    depends_on:
      - redis
    volumes:
      - type: bind
        target: /usr/src/app/data
        source: ${UPLOAD_FOLDER}
      - type: bind
        target: /usr/src/app
        source: .
    command: sh -c "pipenv run rqworker --exception-handler 'images_to_mesh.app.exception_handlers.exeption_handlers.queue_handler' --with-scheduler -u redis://redis:6379"
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    networks:
      - default
volumes:
  exclude:
